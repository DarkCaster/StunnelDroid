apply plugin: 'com.android.application'

android {
    compileSdkVersion 28
    buildToolsVersion "29.0.3"
    defaultConfig {
        applicationId "com.darkcaster.stunneldroid"
        minSdkVersion 28
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        release {
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:28.0.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}

def SetSignConfig() {
    if (project.hasProperty("ANDROID_KEY_STORE") && project.hasProperty("ANDROID_KEY_STORE_PASSWORD_FILE") &&
        project.hasProperty("ANDROID_KEY_ALIAS") && project.hasProperty("ANDROID_KEY_PASSWORD_FILE")) {
        logger.quiet('Trying to use signing configuration from user-provided gradle.properties file')
        project.android.signingConfigs.release {
            storeFile file(ANDROID_KEY_STORE)
            storePassword file(ANDROID_KEY_STORE_PASSWORD_FILE).text.trim()
            keyAlias ANDROID_KEY_ALIAS
            keyPassword file(ANDROID_KEY_PASSWORD_FILE).text.trim()
        }
    }
    else
        logger.quiet('Custom signing configuration is not found')
}

SetSignConfig()